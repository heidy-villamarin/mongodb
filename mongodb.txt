Please enter a MongoDB connection string (Default: mongodb://localhost/): mongodb://localhost:27017/
mongodb://localhost:27017/
Current Mongosh Log ID: 6657608384c12cd7f5cdcdf5
Connecting to:          mongodb://localhost:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.2.6
Using MongoDB:          7.0.9
Using Mongosh:          2.2.6

For mongosh info see: https://docs.mongodb.com/mongodb-shell/


To help improve our products, anonymous usage data is collected and sent to MongoDB periodically (https://www.mongodb.com/legal/privacy-policy).
You can opt-out by running the disableTelemetry() command.

------
   The server generated these startup warnings when booting
   2024-05-28T19:51:30.273-05:00: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
------

test> use base_de_datos
switched to db base_de_datos
base_de_datos> show  databases
admin   40.00 KiB
config  60.00 KiB
local   72.00 KiB
base_de_datos> db.usuarios.insert({
... "nombre": "Alan",
... "apellido": "Vazquez",
... "codigo":"001",
... })
DeprecationWarning: Collection.insert() is deprecated. Use insertOne, insertMany, or bulkWrite.
{
  acknowledged: true,
  insertedIds: { '0': ObjectId('66576ad184c12cd7f5cdcdf6') }
}
base_de_datos> db.usuarios.find()
[
  {
    _id: ObjectId('66576ad184c12cd7f5cdcdf6'),
    nombre: 'Alan',
    apellido: 'Vazquez',
    codigo: '001'
  }
]
base_de_datos> db.venta.insert({
... "codigo":"00001",
... "fecha":"29/05/2024",
... "cantidad":"30",
... "total":"7000",
... })
{
  acknowledged: true,
  insertedIds: { '0': ObjectId('66576c6e84c12cd7f5cdcdf7') }
}
base_de_datos> db.venta.insert({
... })
{
  acknowledged: true,
  insertedIds: { '0': ObjectId('665773c984c12cd7f5cdcdf8') }
}
base_de_datos>  db.ventas.find()

base_de_datos> db.venta.insert({
... ... "codigo":"00001",
Uncaught:
SyntaxError: Unexpected token, expected "," (2:12)

  1 | db.venta.insert({
> 2 | ... "codigo":"00001",
    |             ^
  3 |

base_de_datos> ... "fecha":"29/05/2024",
Uncaught:
SyntaxError: Unexpected token (1:0)

> 1 | ... "fecha":"29/05/2024",
    | ^
  2 |

base_de_datos> ... "cantidad":"30",
Uncaught:
SyntaxError: Unexpected token (1:0)

> 1 | ... "cantidad":"30",
    | ^
  2 |

base_de_datos> ... "total":"7000",
Uncaught:
SyntaxError: Unexpected token (1:0)

> 1 | ... "total":"7000",
    | ^
  2 |

base_de_datos> ... })
Uncaught:
SyntaxError: Unexpected token (1:0)

> 1 | ... })
    | ^
  2 |

base_de_datos> db.producto.insert({
... "codigo":"1234",
... "precio":"7000",
... "cantidad_stock":"20",
... })
{
  acknowledged: true,
  insertedIds: { '0': ObjectId('6657749e84c12cd7f5cdcdf9') }
}
base_de_datos> db.producto.find()
[
  {
    _id: ObjectId('6657749e84c12cd7f5cdcdf9'),
    codigo: '1234',
    precio: '7000',
    cantidad_stock: '20'
  }
]
base_de_datos> db.ventas.insert({
... "codigo":"00001",
... "fecha":"29/05/2024",
... "cantidad":"30",
... "total_unidad":"7000",
... })
{
  acknowledged: true,
  insertedIds: { '0': ObjectId('6657753184c12cd7f5cdcdfa') }
}
base_de_datos> db.ventas.find()
[
  {
    _id: ObjectId('6657753184c12cd7f5cdcdfa'),
    codigo: '00001',
    fecha: '29/05/2024',
    cantidad: '30',
    total_unidad: '7000'
  }
]
base_de_datos> db.detalle_de_venta.insert({
... "cantidad":"30",
... "preciounidad":"7000",
... })
{
  acknowledged: true,
  insertedIds: { '0': ObjectId('6657759c84c12cd7f5cdcdfb') }
}
base_de_datos> db.detalle_de_venta.find()
[
  {
    _id: ObjectId('6657759c84c12cd7f5cdcdfb'),
    cantidad: '30',
    preciounidad: '7000'
  }
]
base_de_datos> db.administrador.insert({
... "nombre":"sofia",
... "apellido":"camargo",
... "celular":"3296543211",
... "dirreccion":"calle 32b #21 este",
... })
{
  acknowledged: true,
  insertedIds: { '0': ObjectId('6657763d84c12cd7f5cdcdfc') }
}
base_de_datos> db.administrador.find()
[
  {
    _id: ObjectId('6657763d84c12cd7f5cdcdfc'),
    nombre: 'sofia',
    apellido: 'camargo',
    celular: '3296543211',
    dirreccion: 'calle 32b #21 este'
  }
]
base_de_datos> show collections
administrador
detalle_de_venta
producto
usuarios
venta
ventas
base_de_datos> db.dropventa()